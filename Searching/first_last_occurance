#include <bits/stdc++.h>
using namespace std;

vector<int> firstLastOccuranceIndex(int arr[], int n, int k)
{
//     vector<int> ans;
//     for (int i = 0; i < n; i++)
//     {
//         if (arr[i] == k)
//         {
//             ans.push_back(i);
//             break;
//         }
//     }
//     for (int i = n-1; i >= 0; i--)
//     {
//         if (arr[i] == k)
//         {
//             ans.push_back(i);
//             break;
//         }
//     }
    
//     if(ans.size() == 0)
//     {
//         ans.push_back(-1);
//     }
//     return ans;
// }

// **** Binary Search Use ******
vector<int> ans;
int s=0, e = n-1, res = -1;
while(s <= e)
{
    int mid = s+(e-s)/2;
    if(arr[mid] == k)
    {
        res = mid;
        e = mid - 1;
    }
    else if (arr[mid] > k)
    {
        e = mid - 1;
    }
    else
    {
        s = mid + 1 ;
    }
}
ans.push_back(res); 

// find the last occurance

s=0, e = n-1, res = -1;
while(s <= e)
{
    int mid = s+(e-s)/2;
    if(arr[mid] == k)
    {
        res = mid;
        s = mid + 1;
    }
    else if (arr[mid] > k)
    {
        e = mid - 1;
    }
    else
    {
        s = mid + 1 ;
    }
}
ans.push_back(res); 
return ans;
}

int main()
{
    int n, k;
    cin >> n >> k;
    int arr[n];
    for (int i = 0; i < n; i++)
    {
        cin >> arr[i];
    }
    vector<int> res = firstLastOccuranceIndex(arr, n, k);
    cout<<res[0]<<" "<<res[1];
}
